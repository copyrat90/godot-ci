name: Manual Build
on:
 workflow_dispatch:
    inputs:
      godot_version:
        description: 'Version of Godot engine to build e.g. "4.2", "4.3"'     
        required: true
        type: string
      limboai_version:
        description: 'Version of LimboAI to build e.g. "1.2.2", "1.3.0"'
        required: true
        type: string
      release_name:
        description: 'Release name, usually "stable", but can also be something like "rc3", "beta1"'
        type: string
        default: "stable"
        required: true
env:
  IMAGE_NAME: godot-limboai-ci
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run:  echo IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Login to GitHub Container Registry 
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run:  echo IMAGE_TAG=$(echo ${{ github.event.inputs.release_name != 'stable' && format('.{0}', github.event.inputs.release_name) || '' }}) >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.limboai_version }}${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.limboai_version }}${{ env.IMAGE_TAG }}
          build-args: |
            GODOT_VERSION=${{ github.event.inputs.godot_version }}
            LIMBOAI_VERSION=${{ github.event.inputs.limboai_version }}
            RELEASE_NAME=${{ github.event.inputs.release_name }}
            GODOT_TEST_ARGS=${{ startsWith( github.event.inputs.godot_version, '3.' ) && '' || '--headless --quit' }}
            GODOT_PLATFORM=${{ startsWith( github.event.inputs.godot_version, '3.' ) && 'linux_headless.64' || 'linux.x86_64' }}
  build-mono:
    name: Build Mono Image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run:  echo IMAGE_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Login to GitHub Container Registry 
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run:  echo IMAGE_TAG=$(echo ${{ github.event.inputs.release_name != 'stable' && format('.{0}', github.event.inputs.release_name) || '' }}) >> $GITHUB_ENV
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          file: mono.Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER }}/${{ env.IMAGE_NAME }}:mono-${{ github.event.inputs.limboai_version }}${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:mono-${{ github.event.inputs.limboai_version }}${{ env.IMAGE_TAG }}
          build-args: |
            GODOT_VERSION=${{ github.event.inputs.godot_version }}
            LIMBOAI_VERSION=${{ github.event.inputs.limboai_version }}
            RELEASE_NAME=${{ github.event.inputs.release_name }}
            FILENAME_GODOT_PLATFORM=${{ startsWith( github.event.inputs.godot_version, '3.' ) && 'linux_headless.64' || 'linux.x86_64' }}
            
